{
	"name": "Refreshdataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "InvoicesTable",
						"type": "DatasetReference"
					},
					"name": "ReadInvoices"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "CalculateBalance"
				},
				{
					"name": "CorrectDataType"
				}
			],
			"script": "source(output(\n\t\tInvoiceID as string,\n\t\tVendorID as string,\n\t\tInvoiceNumber as string,\n\t\tInvoiceDate as string,\n\t\tInvoiceTotal as string,\n\t\tPaymentTotal as string,\n\t\tCreditTotal as string,\n\t\tTermsID as string,\n\t\tInvoiceDueDate as string,\n\t\tPaymentDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ReadInvoices\nCorrectDataType derive(InvoiceBalance = InvoiceTotal-PaymentTotal-CreditTotal) ~> CalculateBalance\nReadInvoices derive(InvoiceID = toInteger(InvoiceID),\n\t\tVendorID = toInteger(VendorID),\n\t\tInvoiceNumber = toInteger(InvoiceNumber),\n\t\tInvoiceDate = toTimestamp(InvoiceDate, 'M/d/yyyy H:mm'),\n\t\tInvoiceTotal = toDecimal(InvoiceTotal),\n\t\tPaymentTotal = toDecimal(PaymentTotal),\n\t\tCreditTotal = toDecimal(CreditTotal)) ~> CorrectDataType"
		}
	}
}